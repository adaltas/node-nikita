// Generated by CoffeeScript 2.6.1
// # `nikita.fs.base.unlink`

// Remove a non-directory type file.

// ## Schema definitions
var definitions, errors, handler, utils;

definitions = {
  config: {
    type: 'object',
    properties: {
      'target': {
        type: 'string',
        description: `Location of the file to remove.`
      }
    },
    required: ['target']
  }
};

// ## Handler
handler = async function({config}) {
  var err;
  try {
    // ! -e: file does not exist
    // `! -L && -d`: file is not a symlink and is a directory, symlink test
    // is required because the `-d` operator follow the test if the file is
    // a symlink
    return (await this.execute(`[ ! -e '${config.target}' ] && exit 2
[ ! -L '${config.target}' ] && [ -d '${config.target}' ] && exit 3
unlink '${config.target}'`));
  } catch (error) {
    err = error;
    switch (err.exit_code) {
      case 2:
        err = errors.NIKITA_FS_UNLINK_ENOENT({
          config: config
        });
        break;
      case 3:
        err = errors.NIKITA_FS_UNLINK_EPERM({
          config: config
        });
    }
    throw err;
  }
};

// ## Exports
module.exports = {
  handler: handler,
  metadata: {
    argument_to_config: 'target',
    log: false,
    raw_output: true,
    definitions: definitions
  }
};

// ## Errors
errors = {
  NIKITA_FS_UNLINK_ENOENT: function({config}) {
    return utils.error('NIKITA_FS_UNLINK_ENOENT', ['the file to remove does not exists,', `got ${JSON.stringify(config.target)}`]);
  },
  NIKITA_FS_UNLINK_EPERM: function({config}) {
    return utils.error('NIKITA_FS_UNLINK_EPERM', ['you do not have the permission to remove the file,', `got ${JSON.stringify(config.target)}`]);
  }
};

// ## Dependencies
utils = require('../../../utils');
