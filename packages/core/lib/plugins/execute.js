// Generated by CoffeeScript 2.6.1
var merge, session;

({merge} = require('mixme'));

session = require('../session');

module.exports = {
  name: '@nikitajs/core/lib/plugins/execute',
  require: ['@nikitajs/core/lib/plugins/tools/find', '@nikitajs/core/lib/plugins/tools/walk'],
  hooks: {
    'nikita:action': {
      handler: async function({
          config,
          metadata,
          tools: {find, walk}
        }) {
        var env;
        if (metadata.module !== '@nikitajs/core/lib/actions/execute') {
          return;
        }
        if (config.arch_chroot == null) {
          config.arch_chroot = (await find(function({
              metadata: {arch_chroot}
            }) {
            return arch_chroot;
          }));
        }
        if (config.arch_chroot_rootdir == null) {
          config.arch_chroot_rootdir = (await find(function({
              metadata: {arch_chroot_rootdir}
            }) {
            return arch_chroot_rootdir;
          }));
        }
        if (config.bash == null) {
          config.bash = (await find(function({
              metadata: {bash}
            }) {
            return bash;
          }));
        }
        if (config.dry == null) {
          config.dry = (await find(function({
              metadata: {dry}
            }) {
            return dry;
          }));
        }
        env = merge(config.env, ...(await walk(function({
            metadata: {env}
          }) {
          return env;
        })));
        if (Object.keys(env).length) {
          config.env = env;
        }
        if (config.env_export == null) {
          config.env_export = (await find(function({
              metadata: {env_export}
            }) {
            return env_export;
          }));
        }
        return config.sudo != null ? config.sudo : config.sudo = (await find(function({
            metadata: {sudo}
          }) {
          return sudo;
        }));
      }
    }
  }
};
