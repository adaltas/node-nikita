// Generated by CoffeeScript 2.6.1
// # `nikita.db.schema.remove`

// Remove a schema from a database.

// ## Schema definitions
var command, definitions, handler;

definitions = {
  config: {
    type: 'object',
    properties: {
      'admin_username': {
        $ref: 'module://@nikitajs/db/lib/query#/definitions/config/properties/admin_username'
      },
      'admin_password': {
        $ref: 'module://@nikitajs/db/lib/query#/definitions/config/properties/admin_password'
      },
      'database': {
        type: 'string',
        description: `The database name where the schema is registered.`
      },
      'engine': {
        $ref: 'module://@nikitajs/db/lib/query#/definitions/config/properties/engine'
      },
      'host': {
        $ref: 'module://@nikitajs/db/lib/query#/definitions/config/properties/host'
      },
      'port': {
        $ref: 'module://@nikitajs/db/lib/query#/definitions/config/properties/port'
      },
      'schema': {
        type: 'string',
        description: `New schema name.`
      }
    },
    required: ['admin_username', 'admin_password', 'database', 'engine', 'host', 'schema']
  }
};

// ## Handler
handler = async function({config}) {
  var exists;
  ({exists} = (await this.db.schema.exists(config)));
  if (!exists) {
    return false;
  }
  return (await this.db.query(config, {
    command: `DROP SCHEMA IF EXISTS ${config.schema};`
  }));
};

// ## Exports
module.exports = {
  handler: handler,
  metadata: {
    argument_to_config: 'schema',
    global: 'db',
    definitions: definitions
  }
};

// ## Dependencies
({command} = require('../query'));
