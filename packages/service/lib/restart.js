// Generated by CoffeeScript 2.6.1
// # `nikita.service.restart`

// Restart a service.

// ## Output

// * `$status`   
//   Indicates if the startup behavior has changed.   

// ## Example

// ```js
// const {$status} = await nikita.service.restart([{
//   name: 'gmetad'
// })
// console.info(`Service was restarted: ${$status}`)
// ```

// ## Schema definitions
var definitions, handler;

definitions = {
  config: {
    type: 'object',
    properties: {
      'name': {
        $ref: 'module://@nikitajs/service/lib/install#/definitions/config/properties/name'
      }
    },
    required: ['name']
  }
};

// ## Handler
handler = async function({
    config,
    parent: {state},
    tools: {log}
  }) {
  var loader, status;
  log({
    message: `Restart service ${config.name}`,
    level: 'INFO'
  });
  ({loader} = (await this.service.discover({})));
  if (config.loader == null) {
    config.loader = loader;
  }
  ({status} = (await this.execute({
    command: (function() {
      switch (config.loader) {
        case 'systemctl':
          return `systemctl restart ${config.name}`;
        case 'service':
          return `service ${config.name} restart`;
        default:
          throw Error('Init System not supported');
      }
    })()
  })));
  if (status) {
    state[`nikita.service.${config.name}.status`] = 'started';
  }
  return {
    status: status
  };
};

// ## Exports
module.exports = {
  handler: handler,
  metadata: {
    argument_to_config: 'name',
    definitions: definitions
  }
};
