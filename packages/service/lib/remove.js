// Generated by CoffeeScript 2.6.1
// # `nikita.service.remove`

// Remove a package or service.

// ## Output

// * `$status`   
//   Indicates if the startup behavior has changed.

// ## Example

// ```js
// const {$status} = await nikita.service.remove([{
//   name: 'gmetad'
// })
// console.info(`Package or service was removed: ${$status}`)
// ```

// ## Schema definitions
var definitions, handler, utils;

definitions = {
  config: {
    type: 'object',
    properties: {
      'cache': {
        type: 'boolean',
        description: `Run entirely from system cache to list installed and outdated
packages.`
      },
      'cacheonly': {
        $ref: 'module://@nikitajs/service/lib/install#/definitions/config/properties/cacheonly'
      },
      'name': {
        $ref: 'module://@nikitajs/service/lib/install#/definitions/config/properties/name'
      }
    },
    required: ['name']
  }
};

// ## Handler
handler = async function({
    config,
    parent: {state},
    tools: {log}
  }) {
  var $status, cacheonly, err, installed, pkg, stdout;
  // config.manager ?= state['nikita:service:manager'] # not supported
  log({
    message: `Remove service ${config.name}`,
    level: 'INFO'
  });
  cacheonly = config.cacheonly ? '-C' : '';
  if (config.cache) {
    installed = state['nikita:execute:installed'];
  }
  if (installed == null) {
    try {
      ({stdout} = (await this.execute({
        $shy: true,
        command: `if command -v yum >/dev/null 2>&1; then
  rpm -qa --qf "%{NAME}\n"
elif command -v pacman >/dev/null 2>&1; then
  pacman -Qqe
elif command -v apt-get >/dev/null 2>&1; then
  dpkg -l | grep \'^ii\' | awk \'{print $2}\'
else
  echo "Unsupported Package Manager" >&2
  exit 2
fi`,
        code_skipped: 1,
        stdout_log: false
      })));
      log({
        message: "Installed packages retrieved",
        level: 'INFO'
      });
      installed = (function() {
        var i, len, ref, results;
        ref = utils.string.lines(stdout);
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          pkg = ref[i];
          results.push(pkg);
        }
        return results;
      })();
    } catch (error) {
      err = error;
      if (err.exit_code === 2) {
        throw Error("Unsupported Package Manager");
      }
      throw err;
    }
  }
  if (installed.indexOf(config.name) !== -1) {
    try {
      ({$status} = (await this.execute({
        command: `if command -v yum >/dev/null 2>&1; then
  yum remove -y ${cacheonly} '${config.name}'
elif command -v pacman >/dev/null 2>&1; then
  pacman --noconfirm -R ${config.name}
elif command -v apt-get >/dev/null 2>&1; then
  apt-get remove -y ${config.name}
else
  echo "Unsupported Package Manager: yum, pacman, apt-get supported" >&2
  exit 2
fi`,
        code_skipped: 3
      })));
      // Update list of installed packages
      installed.splice(installed.indexOf(config.name), 1);
      // Log information
      log($status ? {
        message: "Service removed",
        level: 'WARN',
        module: 'nikita/lib/service/remove'
      } : {
        message: "Service already removed",
        level: 'INFO',
        module: 'nikita/lib/service/remove'
      });
    } catch (error) {
      err = error;
      if (err) {
        throw Error(`Invalid Service Name: ${config.name}`);
      }
      throw err;
    }
  }
  if (config.cache) {
    return (await this.call(function() {
      log({
        message: "Caching installed on \"nikita:execute:installed\"",
        level: 'INFO'
      });
      return state['nikita:execute:installed'] = installed;
    }));
  }
};

// ## Exports
module.exports = {
  handler: handler,
  metadata: {
    argument_to_config: 'name',
    definitions: definitions
  }
};

// ## Dependencies
utils = require('@nikitajs/core/lib/utils');
