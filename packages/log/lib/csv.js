// Generated by CoffeeScript 2.6.1
// # `nikita.log.csv`

// Write logs to the host filesystem in the CSV format.

// ## Schema definitions

// The `log.csv` action leverages the [`log.fs` action](/current/actions/log/fs/)
// and honors all its configuration properties.
var definitions, handler, merge;

definitions = {
  config: {
    type: 'object',
    allOf: [
      {
        properties: {
          serializer: {
            type: 'object',
            default: {},
            description: `Internal property, expose access to the serializer object passed
to the \`log.fs\` action.`
          }
        }
      },
      {
        $ref: 'module://@nikitajs/log/lib/fs#/definitions/config'
      }
    ]
  }
};

// ## Handler
handler = function({config}) {
  var serializer;
  serializer = {
    'nikita:action:start': function({action}) {
      var header, headers, walk;
      if (!action.metadata.header) {
        return;
      }
      walk = function(parent) {
        var precious, results;
        precious = parent.metadata.header;
        results = [];
        if (precious !== void 0) {
          results.push(precious);
        }
        if (parent.parent) {
          results.push(...(walk(parent.parent)));
        }
        return results;
      };
      headers = walk(action);
      header = headers.reverse().join(' : ');
      return `header,,${JSON.stringify(header)}\n`;
    },
    'text': function(log) {
      return `${log.type},${log.level},${JSON.stringify(log.message)}\n`;
    }
  };
  config.serializer = merge(serializer, config.serializer);
  return this.log.fs(config);
};

// ## Exports
module.exports = {
  handler: handler,
  metadata: {
    definitions: definitions
  }
};

// ## Dependencies
({merge} = require('mixme'));
