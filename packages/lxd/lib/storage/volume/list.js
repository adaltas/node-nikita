// Generated by CoffeeScript 2.7.0
// # `nikita.lxc.storage.volume.list`

// Show the list of volumes in a storage pool.

// ## Output parameters

// * `$status`
//   True if the list was issued properly.
// * `list`
//   List of volumes in the pool.

// ## Example

// ```js
// const {list} = await @lxc.storage.volume.list({
//   pool = 'default'
// })
// console.info(`The pool contains the following volumes: ${list}`)
// ```

// ## Schema definitions
var definitions, handler;

definitions = {
  config: {
    type: 'object',
    properties: {
      'pool': {
        type: 'string',
        description: `Name of the storage pool containing the volumes you want to list.`
      },
      'type': {
        enum: ["custom"],
        default: "custom",
        description: `Type of storage volumes to list.`
      }
    },
    required: ['pool']
  }
};

// ## Handler
handler = async function({config}) {
  var $status, data, i;
  ({$status, data} = (await this.lxc.query({
    path: `/1.0/storage-pools/${config.pool}/volumes/${config.type}`,
    code: [0, 42]
  })));
  return {
    $status: $status,
    list: (function() {
      var j, len, results;
      results = [];
      for (j = 0, len = data.length; j < len; j++) {
        i = data[j];
        results.push(i.split('/').pop());
      }
      return results;
    })()
  };
};

// ## Exports
module.exports = {
  handler: handler,
  metadata: {
    definitions: definitions,
    shy: true
  }
};
