// Generated by CoffeeScript 2.6.1
// # `nikita.lxc.config.set`

// Set container or server configuration keys.

// ## Set a configuration key

// ```js
// const {$status} = await nikita.lxc.config.set({
//   name: "my_container",
//   properties: {
//     'boot.autostart.priority': 100
//   }
// })
// console.info(`Property was set: ${$status}`)
// ```

// ## Schema definitions
var definitions, diff, handler, merge, yaml;

definitions = {
  config: {
    type: 'object',
    properties: {
      'container': {
        $ref: 'module://@nikitajs/lxd/lib/init#/definitions/config/properties/container'
      },
      'properties': {
        type: 'object',
        patternProperties: {
          '': {
            type: ['string', 'boolean', 'number']
          }
        },
        description: `One or multiple keys to set.`
      }
    },
    required: ['container', 'properties']
  }
};

// ## Handler
handler = async function({config}) {
  var $status, changes, k, key, keys, properties, ref, stdout, v, value;
  ref = config.properties;
  // Normalize config
  for (k in ref) {
    v = ref[k];
    if (typeof v === 'string') {
      continue;
    }
    config.properties[k] = v.toString();
  }
  keys = {};
  ({stdout} = (await this.execute({
    $shy: true,
    command: `${['lxc', 'config', 'show', config.container].join(' ')}`,
    code_skipped: 42
  })));
  ({
    config: properties
  } = yaml.load(stdout));
  changes = diff(properties, merge(properties, config.properties));
  for (key in changes) {
    value = changes[key];
    // if changes is empty status is false because no command were executed
    // Note, it doesnt seem possible to set multiple keys in one command
    ({$status} = (await this.execute({
      command: ['lxc', 'config', 'set', config.container, key, `'${value.replace('\'', '\\\'')}'`].join(' ')
    })));
  }
  return {
    $status: $status
  };
};

// ## Exports
module.exports = {
  handler: handler,
  metadata: {
    definitions: definitions
  }
};

// ## Dependencies
({merge} = require('mixme'));

yaml = require('js-yaml');

diff = require('object-diff');
