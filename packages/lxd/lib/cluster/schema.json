{
  "config": {
    "type": "object",
    "properties": {
      "containers": {
        "type": "object",
        "description": "Initialize a Linux Container with given image name, container name and\nconfig.",
        "patternProperties": {
          "(^[a-zA-Z][a-zA-Z0-9-]{0,61}[a-zA-Z0-9](?!-)$)|(^[a-zA-Z]$)": {
            "$ref": "module://@nikitajs/lxd/init#/definitions/config",
            "type": "object",
            "properties": {
              "properties": {
                "$ref": "module://@nikitajs/lxd/config/set#/definitions/config/properties/properties"
              },
              "disk": {
                "type": "object",
                "default": {},
                "patternProperties": {
                  ".*": {
                    "$ref": "module://@nikitajs/lxd/config/device#/definitions/disk/properties/properties"
                  }
                }
              },
              "nic": {
                "type": "object",
                "default": {},
                "patternProperties": {
                  ".*": {
                    "type": "object",
                    "allOf": [
                      {
                        "properties": {
                          "ip": {
                            "type": "string",
                            "format": "ipv4"
                          },
                          "netmask": {
                            "type": "string",
                            "default": "255.255.255.0",
                            "format": "ipv4"
                          }
                        }
                      },
                      {
                        "$ref": "module://@nikitajs/lxd/config/device#/definitions/nic/properties/properties"
                      }
                    ]
                  }
                }
              },
              "proxy": {
                "type": "object",
                "default": {},
                "patternProperties": {
                  ".*": {
                    "$ref": "module://@nikitajs/lxd/config/device#/definitions/proxy/properties/properties"
                  }
                }
              },
              "user": {
                "type": "object",
                "default": {},
                "patternProperties": {
                  ".*": {
                    "type": "object",
                    "properties": {
                      "sudo": {
                        "type": "boolean",
                        "default": false,
                        "description": "Enable sudo access for the user."
                      },
                      "authorized_keys": {
                        "type": "string",
                        "description": "Path to file with SSH public key to be added to\nauthorized_keys file."
                      }
                    }
                  }
                }
              },
              "ssh": {
                "type": "object",
                "default": {},
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable SSH connection."
                  }
                }
              }
            }
          }
        }
      },
      "networks": {
        "type": "object",
        "default": {},
        "patternProperties": {
          ".*": {
            "$ref": "module://@nikitajs/lxd/network#/definitions/config/properties/properties"
          }
        }
      },
      "prevision": {
        "typeof": "function",
        "description": "A nikita action called before the container's creation."
      },
      "prevision_container": {
        "typeof": "function",
        "description": "A nikita action called for every container before it is created."
      },
      "provision": {
        "typeof": "function",
        "description": "A nikita action called after the container's creation."
      },
      "provision_container": {
        "typeof": "function",
        "description": "A nikita action called for every container after it is created."
      }
    }
  }
}
