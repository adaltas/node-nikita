{
  "config": {
    "type": "object",
    "properties": {
      "append": {
        "type": "boolean",
        "default": false,
        "description": "Append the content to the target file. If target does not exist, the\nfile will be created. When used with the `match` and `replace` config,\nit will append the `replace` value at the end of the file if no match\nif found and if the value is a string."
      },
      "backup": {
        "type": [
          "boolean",
          "string"
        ],
        "default": false,
        "description": "Create a backup, append a provided string to the filename extension or\na timestamp if value is not a string, only apply if the target file\nexists and is modified."
      },
      "clean": {
        "type": "boolean",
        "default": true,
        "description": "Remove all `null` and `undefined` values."
      },
      "content": {
        "type": "object",
        "description": "The javascript code to stringify."
      },
      "from": {
        "type": "string",
        "description": "Replace from after this marker, a string or a regular expression."
      },
      "gid": {
        "$ref": "module://@nikitajs/file#/definitions/config/properties/gid"
      },
      "indent": {
        "type": "integer",
        "default": 2,
        "description": "Number of space used for indentation. Default to 2."
      },
      "line_width": {
        "type": "integer",
        "default": 160,
        "description": "Number of max character before a new line is written. Default to 160."
      },
      "local": {
        "type": "boolean",
        "default": false,
        "description": "Treat the source as local instead of remote, only apply with \"ssh\"\noption."
      },
      "match": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "instanceof": "RegExp"
          }
        ],
        "description": "Replace this marker, default to the replaced string if missing."
      },
      "merge": {
        "type": "boolean",
        "default": false,
        "description": "Read the target if it exists and merge its content."
      },
      "mode": {
        "$ref": "module://@nikitajs/file#/definitions/config/properties/mode"
      },
      "replace": {
        "type": "array",
        "coercion": true,
        "items": {
          "type": "string"
        },
        "description": "The content to be inserted, used conjointly with the from, to or match\noptions."
      },
      "source": {
        "type": "string",
        "description": "File path from where to extract the content, do not use conjointly\nwith content."
      },
      "ssh": {
        "type": "object",
        "description": "Run the action on a remote server using SSH, an ssh2 instance or an\nconfiguration object used to initialize the SSH connection."
      },
      "stdout": {
        "description": "Writable EventEmitter in which the standard output of executed\ncommands will be piped."
      },
      "stderr": {
        "description": "Writable EventEmitter in which the standard error output of executed\ncommand will be piped."
      },
      "target": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "typeof": "function"
          }
        ],
        "description": "File path where to write content to. Pass the content."
      },
      "to": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "instanceof": "RegExp"
          }
        ],
        "description": "Replace to before this marker, a string or a regular expression."
      },
      "uid": {
        "$ref": "module://@nikitajs/file#/definitions/config/properties/uid"
      }
    },
    "required": [
      "content",
      "target"
    ]
  }
}
