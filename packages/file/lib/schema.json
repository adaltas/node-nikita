{
  "config": {
    "type": "object",
    "properties": {
      "append": {
        "oneOf": [
          {
            "typeof": "boolean"
          },
          {
            "typeof": "string"
          },
          {
            "instanceof": "RegExp"
          }
        ],
        "default": false,
        "description": "Append the content to the target file. If target does not exist, the\nfile will be created."
      },
      "backup": {
        "type": [
          "boolean",
          "string"
        ],
        "description": "Create a backup, append a provided string to the filename extension or\na timestamp if value is not a string, only apply if the target file\nexists and is modified."
      },
      "backup_mode": {
        "$ref": "module://@nikitajs/core/actions/fs/chmod#/definitions/config/properties/mode",
        "description": "Backup file mode (permission and sticky bits), defaults to `0o0400`,\nin the  form of `{mode: 0o0400}` or `{mode: \"0400\"}`."
      },
      "content": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "typeof": "function"
          }
        ],
        "description": "Text to be written, an alternative to source which reference a file."
      },
      "context": {
        "type": "object",
        "description": "Context provided to the template engine."
      },
      "diff": {
        "typeof": "function",
        "description": "Print diff information, pass a readable diff and the result of\n[jsdiff.diffLines][diffLines] as arguments if a function, default to\ntrue."
      },
      "eof": {
        "type": [
          "boolean",
          "string"
        ],
        "description": "Ensure the file ends with this charactere sequence, special values are\n'windows', 'mac', 'unix' and 'unicode' (respectively \"\r\n\", \"\r\",\n\"\n\", \"\"), will be auto-detected if \"true\", default to false or\n\"\n\" if \"true\" and not detected."
      },
      "encoding": {
        "type": "string",
        "default": "utf8",
        "description": "Encoding of the source and target files."
      },
      "engine": {
        "type": "string",
        "default": "handlebars",
        "description": "Template engine being used."
      },
      "from": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "instanceof": "RegExp"
          }
        ],
        "description": "Name of the marker from where the content will be replaced."
      },
      "gid": {
        "$ref": "module://@nikitajs/core/actions/fs/chown#/definitions/config/properties/gid"
      },
      "local": {
        "type": "boolean",
        "default": false,
        "description": "Treat the source as local instead of remote, only apply with \"ssh\"\noption."
      },
      "match": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "instanceof": "RegExp"
          }
        ],
        "description": "Replace this marker, default to the replaced string if missing."
      },
      "mode": {
        "$ref": "module://@nikitajs/core/actions/fs/chmod#/definitions/config/properties/mode"
      },
      "place_before": {
        "oneOf": [
          {
            "typeof": "boolean"
          },
          {
            "typeof": "string"
          },
          {
            "instanceof": "RegExp"
          }
        ],
        "description": "Place the content before the match."
      },
      "remove_empty_lines": {
        "type": "boolean",
        "description": "Remove empty lines from content"
      },
      "replace": {
        "type": [
          "array",
          "string"
        ],
        "items": {
          "type": "string"
        },
        "description": "The content to be inserted, used conjointly with the from, to or match\noptions."
      },
      "source": {
        "type": "string",
        "description": "File path from where to extract the content, do not use conjointly\nwith content."
      },
      "target": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "typeof": "function"
          }
        ],
        "description": "File path where to write content to. Pass the content."
      },
      "to": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "instanceof": "RegExp"
          }
        ],
        "description": "Name of the marker until where the content will be replaced."
      },
      "uid": {
        "$ref": "module://@nikitajs/core/actions/fs/chown#/definitions/config/properties/uid"
      },
      "unlink": {
        "type": "boolean",
        "default": false,
        "description": "Replace the existing link, leaving the refered file untouched."
      },
      "write": {
        "description": "An array containing multiple transformation where a transformation is\nan object accepting the options `from`, `to`, `match` and `replace`.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "from": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "instanceof": "RegExp"
                }
              ],
              "description": "File path from where to extract the content, do not use\nconjointly with content."
            },
            "to": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "instanceof": "RegExp"
                }
              ],
              "description": "Name of the marker until where the content will be replaced."
            },
            "match": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "instanceof": "RegExp"
                }
              ],
              "description": "Replace this marker, default to the replaced string if missing."
            },
            "replace": {
              "type": "string",
              "description": "The content to be inserted, used conjointly with the from, to or\nmatch options."
            }
          }
        }
      }
    },
    "required": [
      "target"
    ]
  }
}
