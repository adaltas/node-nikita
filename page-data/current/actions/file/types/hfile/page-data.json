{
    "componentChunkName": "component---src-templates-action-js",
    "path": "/current/actions/file/types/hfile/",
    "result": {"data":{"page":{"slug":"/current/actions/file/types/hfile/","edit_url":"https://github.com/adaltas/node-nikita/edit/master/packages/file/src/types/hfile.coffee.md","package":{"id":"0da3cbd9-050e-561c-89f2-951886fd0898","keywords":["nikita","build","cli","deploy","fs","install","masson","ssh","system","task"]},"name":"file.types.hfile","version":{"alias":"current"},"parent":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"HFile is an XML format used accros Hadoop components which contains keys and\\nvalue properties.\"), mdx(\"h2\", {\n    \"id\": \"schema-definitions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#schema-definitions\",\n    \"aria-label\": \"schema definitions permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Schema definitions\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"definitions =\\n  config:\\n    type: 'object'\\n    properties:\\n      'merge':\\n        type: 'boolean'\\n        description: '''\\n        Read the target if it exists and merge its content, optional.\\n        '''\\n      'source':\\n        type: ['object', 'string']\\n        description: '''\\n        Default configuration properties or the path to a default\\n        configuration file to get initial value from, optional.\\n        '''\\n      'target':\\n        type: 'string'\\n        description: '''\\n        Configuration file where to write, required.\\n        '''\\n      'properties':\\n        type: 'object'\\n        description: '''\\n        Configuration properties to write, required.\\n        '''\\n      'transform':\\n        oneOf: [{typeof: 'function'}, {type: 'null'}]\\n        default: null\\n        description: '''\\n        User defined function used to transform properties.\\n        '''\\n      # File configuration properties\\n      'backup':\\n        $ref: 'module://@nikitajs/file/src/index#/definitions/config/properties/backup'\\n      'backup_mode':\\n        $ref: 'module://@nikitajs/file/src/index#/definitions/config/properties/backup_mode'\\n      'eof':\\n        $ref: 'module://@nikitajs/file/src/index#/definitions/config/properties/eof'\\n      'encoding':\\n        $ref: 'module://@nikitajs/file/src/index#/definitions/config/properties/encoding'\\n        default: 'utf8'\\n      'uid':\\n        $ref: 'module://@nikitajs/file/src/index#/definitions/config/properties/uid'\\n      'gid':\\n        $ref: 'module://@nikitajs/file/src/index#/definitions/config/properties/gid'\\n      'mode':\\n        $ref: 'module://@nikitajs/file/src/index#/definitions/config/properties/mode'\\n      'local':\\n        $ref: 'module://@nikitajs/file/src/index#/definitions/config/properties/local'\\n      'unlink':\\n        $ref: 'module://@nikitajs/file/src/index#/definitions/config/properties/unlink'\"))), mdx(\"h2\", {\n    \"id\": \"handler\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#handler\",\n    \"aria-label\": \"handler permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Handler\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"handler = ({config, tools: {log}}) ->\\n  fnl_props = {}\\n  org_props = {}\\n  # Read target properties\\n  log message: \\\"Read target properties from '#{config.target}'\\\", level: 'DEBUG', module: '@nikita/file/lib/types/hfile'\\n  # Populate org_props and, if merge, fnl_props\\n  try\\n    {data} = await @fs.base.readFile\\n      encoding: config.encoding\\n      target: config.target\\n    org_props = parse data\\n    if config.merge\\n      fnl_props = {}\\n      for k, v of org_props then fnl_props[k] = v\\n  catch err\\n    throw err unless err.code is 'NIKITA_FS_CRS_TARGET_ENOENT'\\n  # Read source properties\\n  if config.source and typeof config.source is 'string'\\n    log message: \\\"Read source properties from #{config.source}\\\", level: 'DEBUG', module: '@nikita/file/lib/types/hfile'\\n    # Populate config.source\\n    {data} = await @fs.base.readFile\\n      $ssh: false if config.local\\n      encoding: config.encoding\\n      target: config.target\\n    config.source = parse data\\n  # Merge source properties\\n  if config.source\\n    # Note, source properties overwrite current ones by source, not sure\\n    # if this is the safest approach\\n    log message: \\\"Merge source properties\\\", level: 'DEBUG', module: '@nikita/file/lib/types/hfile'\\n    for k, v of config.source\\n      v = \\\"#{v}\\\" if typeof v is 'number'\\n      fnl_props[k] = v if fnl_props[k] is undefined or fnl_props[k] is null\\n  # Merge user properties\\n  log message: \\\"Merge user properties\\\", level: 'DEBUG', module: '@nikita/file/lib/types/hfile'\\n  for k, v of config.properties\\n    v = \\\"#{v}\\\" if typeof v is 'number'\\n    unless v?\\n      delete fnl_props[k]\\n    else if Array.isArray v\\n      fnl_props[k] = v.join ','\\n    else if typeof v isnt 'string'\\n      throw Error \\\"Invalid value type '#{typeof v}' for property '#{k}'\\\"\\n    else fnl_props[k] = v\\n  # Apply transformation\\n  fnl_props = config.transform fnl_props if config.transform\\n  # Final merge\\n  keys = {}\\n  for k in Object.keys(org_props) then keys[k] = true\\n  for k in Object.keys(fnl_props) then keys[k] = true unless keys[k]?\\n  keys = Object.keys keys\\n  for k in keys\\n    continue unless org_props[k] isnt fnl_props[k]\\n    log message: \\\"Property '#{k}' was '#{org_props[k]}' and is now '#{fnl_props[k]}'\\\", level: 'WARN', module: '@nikita/file/lib/types/hfile'\\n  await @file\\n    content: stringify fnl_props\\n    target: config.target\\n    source: undefined\\n    backup: config.backup\\n    backup_mode: config.backup_mode\\n    eof: config.eof\\n    encoding: config.encoding\\n    uid: config.uid\\n    gid: config.gid\\n    mode: config.mode\\n    local: config.local\\n    unlink: config.unlink\\n  \"))), mdx(\"h2\", {\n    \"id\": \"exports\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#exports\",\n    \"aria-label\": \"exports permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Exports\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"module.exports =\\n  handler: handler\\n  metadata:\\n    definitions: definitions\"))), mdx(\"h2\", {\n    \"id\": \"parsexml-property\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#parsexml-property\",\n    \"aria-label\": \"parsexml property permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h2\",\n    \"className\": \"language-text\"\n  }, \"parse(xml, [property])\")), mdx(\"p\", null, \"Parse an xml document and retrieve one or multiple properties.\"), mdx(\"p\", null, \"Retrieve all properties: \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"properties = parse(xml)\"), \"\\nRetrieve a property: \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"value = parse(xml, property)\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"parse = (markup, property) ->\\n  properties = {}\\n  doc = new xmldom.DOMParser().parseFromString markup\\n  for propertyChild in doc.documentElement.childNodes\\n    continue unless propertyChild.tagName?.toUpperCase() is 'PROPERTY'\\n    name = value = undefined\\n    for child in propertyChild.childNodes\\n      if child.tagName?.toUpperCase() is 'NAME'\\n        name = child.childNodes[0].nodeValue\\n      if child.tagName?.toUpperCase() is 'VALUE'\\n        value = child.childNodes[0]?.nodeValue or ''\\n    return value if property and name is property and value?\\n    properties[name] = value if name and value?\\n  return properties\"))), mdx(\"h2\", {\n    \"id\": \"stringifyproperties\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#stringifyproperties\",\n    \"aria-label\": \"stringifyproperties permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"code\", {\n    parentName: \"h2\",\n    \"className\": \"language-text\"\n  }, \"stringify(properties)\")), mdx(\"p\", null, \"Convert a property object into a valid Hadoop XML markup. Properties are\\nordered by name.\"), mdx(\"p\", null, \"Convert an object into a string:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"markup = stringify({\\n  'fs.defaultFS': 'hdfs://namenode:8020'\\n});\"))), mdx(\"p\", null, \"Convert an array into a string:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"stringify([{\\n  name: 'fs.defaultFS', value: 'hdfs://namenode:8020'\\n}])\"))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"stringify = (properties) ->\\n  markup = builder.create 'configuration', version: '1.0', encoding: 'UTF-8'\\n  if Array.isArray properties\\n    properties.sort (el1, el2) -> el1.name > el2.name\\n    for {name, value} in properties\\n      property = markup.ele 'property'\\n      property.ele 'name', name\\n      property.ele 'value', value\\n  else\\n    ks = Object.keys properties\\n    ks.sort()\\n    for k in ks\\n      property = markup.ele 'property'\\n      property.ele 'name', k\\n      property.ele 'value', properties[k]\\n  markup.end pretty: true\"))), mdx(\"h2\", {\n    \"id\": \"dependencies\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#dependencies\",\n    \"aria-label\": \"dependencies permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Dependencies\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"xmldom = require 'xmldom'\\nbuilder = require 'xmlbuilder'\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#nikitafiletypeshfile","title":"nikita.file.types.hfile","items":[{"url":"#schema-definitions","title":"Schema definitions"},{"url":"#handler","title":"Handler"},{"url":"#exports","title":"Exports"},{"url":"#parsexml-property","title":"parse(xml, [property])"},{"url":"#stringifyproperties","title":"stringify(properties)"},{"url":"#dependencies","title":"Dependencies"}]}]},"excerpt":"nikita.file.types.hfile HFile is an XML format used accros Hadoop components which contains keys and\nvalue properties. Schema definitions Handler Exports parse(xml, [property]) Parse an xml document …"}}},"pageContext":{}},
    "staticQueryHashes": ["2288906906","393869461"]}