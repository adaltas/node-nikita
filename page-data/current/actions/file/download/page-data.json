{
    "componentChunkName": "component---src-templates-action-js",
    "path": "/current/actions/file/download/",
    "result": {"data":{"page":{"slug":"/current/actions/file/download/","edit_url":"https://github.com/adaltas/node-nikita/edit/master/packages/file/src/download.coffee.md","package":{"id":"0da3cbd9-050e-561c-89f2-951886fd0898","keywords":["nikita","build","cli","deploy","fs","install","masson","ssh","system","task"]},"name":"file.download","version":{"alias":"current"},"parent":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Download files using various protocols.\"), mdx(\"p\", null, \"In local mode (with an SSH connection), the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"http\"), \" protocol is handled with the\\n\\\"request\\\" module when executed locally, the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"ftp\"), \" protocol is handled with the\\n\\\"jsftp\\\" and the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"file\"), \" protocol is handle with the native \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"fs\"), \" module.\"), mdx(\"p\", null, \"The behavior of download may be confusing wether you are running over SSH or\\nnot. Its philosophy mostly rely on the target point of view. When download\\nrun, the target is local, compared to the upload function where target\\nis remote.\"), mdx(\"p\", null, \"A checksum may provided with the option \\\"sha256\\\", \\\"sha1\\\" or \\\"md5\\\" to validate the uploaded\\nfile signature.\"), mdx(\"p\", null, \"Caching is active if \\\"cache_dir\\\" or \\\"cache_file\\\" are defined to anything but false.\\nIf cache_dir is not a string, default value is './'\\nIf cache_file is not a string, default is source basename.\"), mdx(\"p\", null, \"Nikita resolve the path from \\\"cache_dir\\\" to \\\"cache_file\\\", so if cache_file is an\\nabsolute path, \\\"cache_dir\\\" will be ignored\"), mdx(\"p\", null, \"If no cache is used, signature validation is only active if a checksum is\\nprovided.\"), mdx(\"p\", null, \"If cache is used, signature validation is always active, and md5sum is automatically\\ncalculated if neither sha256, sh1 nor md5 is provided.\"), mdx(\"h2\", {\n    \"id\": \"output\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#output\",\n    \"aria-label\": \"output permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Output\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"$status\"), \" (boolean)\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"Value is \\\"true\\\" if file was downloaded.\")), mdx(\"h2\", {\n    \"id\": \"file-example\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#file-example\",\n    \"aria-label\": \"file example permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"File example\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-js\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"$status\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" nikita\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"file\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"download\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"source\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'file://path/to/something'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"target\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'node-sigar.tgz'\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \"\\nconsole\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"info\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"File downloaded: \"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"${\"), \"$status\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\")))), mdx(\"h2\", {\n    \"id\": \"http-example\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#http-example\",\n    \"aria-label\": \"http example permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"HTTP example\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-js\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"$status\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" nikita\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"file\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"download\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"source\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'https://github.com/adaltas/node-nikita/tarball/v0.0.1'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"target\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'node-sigar.tgz'\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \"\\nconsole\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"info\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"File downloaded: \"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"${\"), \"$status\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\")))), mdx(\"h2\", {\n    \"id\": \"todo\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#todo\",\n    \"aria-label\": \"todo permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"TODO\"), mdx(\"p\", null, \"It would be nice to support alternatives sources such as FTP(S) or SFTP.\"), mdx(\"h2\", {\n    \"id\": \"hooks\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#hooks\",\n    \"aria-label\": \"hooks permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Hooks\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"on_action = ({config, tools: {find}}) ->\\n  config.cache = await find ({config: {cache}}) -> cache\\n  config.cache_file = await find ({config: {cache_file}}) -> cache_file\\n  config.cache_dir = await find ({config: {cache_dir}}) -> cache_dir\\n  config.source = config.source.substr 7 if /^file:\\\\/\\\\//.test config.source\"))), mdx(\"h2\", {\n    \"id\": \"schema-definitions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#schema-definitions\",\n    \"aria-label\": \"schema definitions permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Schema definitions\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"definitions =\\n  config:\\n    type: 'object'\\n    properties:\\n      'cache':\\n        type: 'boolean'\\n        description: '''\\n        Activate the cache, default to true if either \\\"cache_dir\\\" or\\n        \\\"cache_file\\\" is activated.\\n        '''\\n      'cache_dir':\\n        type: 'string'\\n        description: '''\\n        Path of the cache directory.\\n        '''\\n      'cache_file':\\n        type: ['boolean', 'string']\\n        description: '''\\n        Cache the file on the executing machine, equivalent to cache unless an\\n        ssh connection is provided. If a string is provided, it will be the\\n        cache path. By default: basename of source\\n        '''\\n      'cookies':\\n        type: 'array', items: type: 'string'\\n        description: '''\\n        Extra cookies  to include in the request when sending HTTP to a\\n        server.\\n        '''\\n      'force':\\n        type: 'boolean'\\n        description: '''\\n        Overwrite the target file if it exists.\\n        '''\\n      'force_cache':\\n        type: 'boolean'\\n        description: '''\\n        Force cache overwrite if it exists\\n        '''\\n      'gid':\\n        $ref: 'module://@nikitajs/core/lib/actions/fs/chown#/definitions/config/properties/gid'\\n      'http_headers':\\n        type: 'array', items: type: 'string'\\n        description: '''\\n        Extra header to include in the request when sending HTTP to a server.\\n        '''\\n      'location':\\n        type: 'boolean'\\n        description: '''\\n        If the server reports that the requested page has moved to a different\\n        location (indicated with a Location: header and a 3XX response code),\\n        this option will make curl redo the request on the new place.\\n        '''\\n      'md5':\\n        default: false\\n        type: ['boolean', 'string']\\n        description: '''\\n        Validate uploaded file with md5 checksum (only for binary upload for\\n        now), may be the string checksum or will be deduced from source if\\n        \\\"true\\\".\\n        '''\\n      'mode':\\n        $ref: 'module://@nikitajs/core/lib/actions/fs/chmod#/definitions/config/properties/mode'\\n      'proxy':\\n        type: 'string'\\n        description: '''\\n        Use the specified HTTP proxy. If the port number is not specified, it\\n        is assumed at port 1080. See curl(1) man page.\\n        '''\\n      'sha1':\\n        default: false\\n        type: ['boolean', 'string']\\n        description: '''\\n        Validate uploaded file with sha1 checksum (only for binary upload for\\n        now), may be the string checksum or will be deduced from source if\\n        \\\"true\\\".\\n        '''\\n      'sha256':\\n        default: false\\n        type: ['boolean', 'string']\\n        description: '''\\n        Validate uploaded file with sha1 checksum (only for binary upload for\\n        now), may be the string checksum or will be deduced from source if\\n        \\\"true\\\".\\n        '''\\n      'source':\\n        type: 'string'\\n        description: '''\\n        File, HTTP URL, GIT repository. File is the default protocol if source\\n        is provided without any.\\n        '''\\n      'target':\\n        oneOf:[\\n          type: 'string'\\n        ,\\n          typeof: 'function'\\n        ]\\n        description: '''\\n        File path where to write content to. Pass the content.\\n        '''\\n      'uid':\\n        $ref: 'module://@nikitajs/core/lib/actions/fs/chown#/definitions/config/properties/uid'\\n    required: ['target', 'source']\"))), mdx(\"h2\", {\n    \"id\": \"handler\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#handler\",\n    \"aria-label\": \"handler permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Handler\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"handler = ({config, ssh, tools: {log, path}}) ->\\n  if config.md5?\\n    throw Error \\\"Invalid MD5 Hash:#{config.md5}\\\" unless typeof config.md5 in ['string', 'boolean']\\n    algo = 'md5'\\n    source_hash = config.md5\\n  else if config.sha1?\\n    throw Error \\\"Invalid SHA-1 Hash:#{config.sha1}\\\" unless typeof config.sha1 in ['string', 'boolean']\\n    algo = 'sha1'\\n    source_hash = config.sha1\\n  else if config.sha256?\\n    throw Error \\\"Invalid SHA-256 Hash:#{config.sha256}\\\" unless typeof config.sha256 in ['string', 'boolean']\\n    algo = 'sha256'\\n    source_hash = config.sha256\\n  else\\n    algo = 'md5'\\n  protocols_http = ['http:', 'https:']\\n  protocols_ftp = ['ftp:', 'ftps:']\\n  log message: \\\"Using force: #{JSON.stringify config.force}\\\", level: 'DEBUG' if config.force\\n  source_url = url.parse config.source\\n  match = null\\n  # Disable caching if source is a local file and cache isnt explicitly set by user\\n  config.cache = false if not config.cache? and source_url.protocol is null\\n  config.cache ?= !!(config.cache_dir or config.cache_file)\\n  config.http_headers ?= []\\n  config.cookies ?= []\\n  # Normalization\\n  config.target = if config.cwd then path.resolve config.cwd, config.target else path.normalize config.target\\n  throw Error \\\"Non Absolute Path: target is #{JSON.stringify config.target}, SSH requires absolute paths, you must provide an absolute path in the target or the cwd option\\\" if ssh and not path.isAbsolute config.target\\n  # Shortcircuit accelerator:\\n  # If we know the source signature and if the target file exists\\n  # we compare it with the target file signature and stop if they match\\n  if typeof source_hash is 'string'\\n    {shortcircuit} = await @call $shy: true, ->\\n      log message: \\\"Shortcircuit check if provided hash match target\\\", level: 'WARN'\\n      try\\n        {hash} = await @fs.hash config.target, algo: algo\\n        shortcircuit: !source_hash is hash\\n      catch err\\n        throw err if err.code isnt 'NIKITA_FS_STAT_TARGET_ENOENT'\\n        shortcircuit: false\\n    return true if shortcircuit\\n    log message: \\\"Destination with valid signature, download aborted\\\", level: 'INFO'\\n  # Download the file and place it inside local cache\\n  # Overwrite the config.source and source_url properties to make them\\n  # look like a local file instead of an HTTP URL\\n  if config.cache\\n    await @file.cache\\n      # Local file must be readable by the current process\\n      $ssh: false\\n      $sudo: false\\n      source: config.source\\n      cache_dir: config.cache_dir\\n      cache_file: config.cache_file\\n      http_headers: config.http_headers\\n      cookies: config.cookies\\n      md5: config.md5\\n      proxy: config.proxy\\n      location: config.location\\n    source_url = url.parse config.source\\n  # TODO\\n  # The current implementation seems inefficient. By modifying stageDestination,\\n  # we download the file, check the hash, and again treat it the HTTP URL\\n  # as a local file and check hash again.\\n  try\\n    {stats} = await @fs.base.stat\\n      target: config.target\\n    if utils.stats.isDirectory stats?.mode\\n      log message: \\\"Destination is a directory\\\", level: 'DEBUG'\\n      config.target = path.join config.target, path.basename config.source\\n  catch err\\n    throw err if err.code isnt 'NIKITA_FS_STAT_TARGET_ENOENT'\\n  stageDestination = \\\"#{config.target}.#{Date.now()}#{Math.round(Math.random()*1000)}\\\"\\n  if source_url.protocol in protocols_http\\n    log message: \\\"HTTP Download\\\", level: 'DEBUG'\\n    log message: \\\"Download file from url using curl\\\", level: 'INFO'\\n    # Ensure target directory exists\\n    await @fs.mkdir\\n      $shy: true\\n      target: path.dirname stageDestination\\n    # Download the file\\n    await @execute\\n      $shy: true\\n      command: [\\n        'curl'\\n        '--fail' if config.fail\\n        '--insecure' if source_url.protocol is 'https:'\\n        '--location' if config.location\\n        ...(\\\"--header '#{header.replace '\\\\'', '\\\\\\\\\\\\''}'\\\" for header in config.http_headers)\\n        ...(\\\"--cookie '#{cookie.replace '\\\\'', '\\\\\\\\\\\\''}'\\\" for cookie in config.cookies)\\n        \\\"-s #{config.source}\\\"\\n        \\\"-o #{stageDestination}\\\"\\n        \\\"-x #{config.proxy}\\\" if config.proxy\\n      ].join ' '\\n    hash_source = hash_target = null\\n    {hash} = await @fs.hash stageDestination, algo: algo\\n    # Hash validation\\n    # Probably not the best to check hash, it only applies to HTTP for now\\n    throw Error \\\"Invalid downloaded checksum, found '#{hash}' instead of '#{source_hash}'\\\" if typeof source_hash is 'string' and source_hash isnt hash\\n    hash_source = hash\\n    {exists} = await @fs.base.exists target: config.target\\n    if exists\\n      {hash} = await @fs.hash target: config.target, algo: algo\\n      hash_target = hash\\n    match = hash_source is hash_target\\n    log if match\\n    then message: \\\"Hash matches as '#{hash_source}'\\\", level: 'INFO', module: 'nikita/lib/file/download'\\n    else message: \\\"Hash dont match, source is '#{hash_source}' and target is '#{hash_target}'\\\", level: 'WARN', module: 'nikita/lib/file/download'\\n    if match\\n      await @fs.remove\\n        $shy: true\\n        target: stageDestination\\n  else if source_url.protocol not in protocols_http and not ssh\\n    log message: \\\"File Download without ssh (with or without cache)\\\", level: 'DEBUG'\\n    hash_source = hash_target = null\\n    {hash} = await @fs.hash target: config.source, algo: algo\\n    hash_source = hash\\n    {exists} = await @fs.base.exists target: config.target\\n    if exists\\n      {hash} = await @fs.hash target: config.target, algo: algo\\n      hash_target = hash\\n    match = hash_source is hash_target\\n    log if match\\n    then message: \\\"Hash matches as '#{hash_source}'\\\", level: 'INFO', module: 'nikita/lib/file/download'\\n    else message: \\\"Hash dont match, source is '#{hash_source}' and target is '#{hash_target}'\\\", level: 'WARN', module: 'nikita/lib/file/download'\\n    unless match\\n      await @fs.mkdir\\n        $shy: true\\n        target: path.dirname stageDestination\\n      await @fs.copy\\n        source: config.source\\n        target: stageDestination\\n  else if source_url.protocol not in protocols_http and ssh\\n    log message: \\\"File Download with ssh (with or without cache)\\\", level: 'DEBUG'\\n    hash_source = hash_target = null\\n    {hash} = await @fs.hash\\n      $ssh: false\\n      $sudo: false\\n      target: config.source\\n      algo: algo\\n    hash_source = hash\\n    {exists} = await @fs.base.exists target: config.target\\n    if exists\\n      {hash} = await @fs.hash target: config.target, algo: algo\\n      hash_target = hash\\n    match = hash_source is hash_target\\n    log if match\\n    then message: \\\"Hash matches as '#{hash_source}'\\\", level: 'INFO', module: 'nikita/lib/file/download'\\n    else message: \\\"Hash dont match, source is '#{hash_source}' and target is '#{hash_target}'\\\", level: 'WARN', module: 'nikita/lib/file/download'\\n    unless match\\n      await @fs.mkdir\\n        $shy: true\\n        target: path.dirname stageDestination\\n      try\\n        await @fs.base.createWriteStream\\n          target: stageDestination\\n          stream: (ws) ->\\n            rs = fs.createReadStream config.source\\n            rs.pipe ws\\n        log message: \\\"Downloaded local source #{JSON.stringify config.source} to remote target #{JSON.stringify stageDestination}\\\", level: 'INFO'\\n      catch err\\n        log message: \\\"Downloaded local source #{JSON.stringify config.source} to remote target #{JSON.stringify stageDestination} failed\\\", level: 'ERROR'\\n  log message: \\\"Unstage downloaded file\\\", level: 'DEBUG'\\n  unless match\\n    await @fs.move\\n      source: stageDestination\\n      target: config.target\\n  if config.mode\\n    await @fs.chmod\\n      target: config.target\\n      mode: config.mode\\n  if config.uid or config.gid\\n    await @fs.chown\\n      target: config.target\\n      uid: config.uid\\n      gid: config.gid\\n  {}\"))), mdx(\"h2\", {\n    \"id\": \"exports\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#exports\",\n    \"aria-label\": \"exports permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Exports\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"module.exports =\\n  handler: handler\\n  hooks:\\n    on_action: on_action\\n  metadata:\\n    definitions: definitions\"))), mdx(\"h2\", {\n    \"id\": \"module-dependencies\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#module-dependencies\",\n    \"aria-label\": \"module dependencies permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Module Dependencies\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"fs = require 'fs'\\npath = require('path').posix # need to detect ssh connection\\nurl = require 'url'\\nutils = require './utils'\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#nikitafiledownload","title":"nikita.file.download","items":[{"url":"#output","title":"Output"},{"url":"#file-example","title":"File example"},{"url":"#http-example","title":"HTTP example"},{"url":"#todo","title":"TODO"},{"url":"#hooks","title":"Hooks"},{"url":"#schema-definitions","title":"Schema definitions"},{"url":"#handler","title":"Handler"},{"url":"#exports","title":"Exports"},{"url":"#module-dependencies","title":"Module Dependencies"}]}]},"excerpt":"nikita.file.download Download files using various protocols. In local mode (with an SSH connection), the  http  protocol is handled with the\n\"request\" module when executed locally, the  ftp  protocol…"}}},"pageContext":{}},
    "staticQueryHashes": ["2288906906","393869461"]}