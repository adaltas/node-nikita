{
    "componentChunkName": "component---src-templates-action-js",
    "path": "/current/actions/lxd/lxc/cluster/",
    "result": {"data":{"page":{"slug":"/current/actions/lxd/lxc/cluster/","edit_url":"https://github.com/adaltas/node-nikita/edit/master/packages/lxd/src/cluster/index.coffee.md","package":{"id":"b3bda8d7-a98a-5dce-a720-719ab0cb7139","keywords":["nikita","automation","build","deploy","install","ssh","lxd","container"]},"name":"lxc.cluster","version":{"alias":"current"},"parent":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Create a cluster of LXD instances.\"), mdx(\"h2\", {\n    \"id\": \"example\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#example\",\n    \"aria-label\": \"example permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Example\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"yaml\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-yaml\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"networks\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"lxdbr0public\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"ipv4.address\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" 172.16.0.1/24\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"ipv4.nat\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token boolean important\"\n  }, \"true\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"ipv6.address\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" none\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"lxdbr1private\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"ipv4.address\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" 10.10.10.1/24\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"ipv4.nat\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token boolean important\"\n  }, \"true\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"ipv6.address\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" none\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"dns.domain\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" nikita.local\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"containers\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"nikita\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"image\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" images\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"centos/7\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"properties\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"environment\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"MY_VAR\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'my value'\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"disk\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"nikitadir\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"source\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" /nikita\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"path\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" /nikita\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"nic\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"eth0\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"container\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" eth0\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"nictype\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" bridged\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"parent\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" lxdbr0public\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"eth1\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"container\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" eth1\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"nictype\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" bridged\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"parent\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" lxdbr1private\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"ipv4.address\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'10.10.10.10'\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"proxy\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"ssh\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"listen\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'tcp:0.0.0.0:2200'\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"connect\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'tcp:127.0.0.1:22'\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"ssh\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"enabled\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token boolean important\"\n  }, \"true\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"#id_rsa: assets/id_rsa\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"user\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"nikita\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"sudo\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token boolean important\"\n  }, \"true\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"authorized_keys\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" assets/id_rsa.pub\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"prevision\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" path/to/action\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"provision\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" path/to/action\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token key atrule\"\n  }, \"provision_container\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \":\"), \" path/to/action\"))), mdx(\"h2\", {\n    \"id\": \"schema-definitions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#schema-definitions\",\n    \"aria-label\": \"schema definitions permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Schema definitions\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"definitions =\\n  config:\\n    type: 'object'\\n    properties:\\n      'containers':\\n        type: 'object'\\n        description: '''\\n        Initialize a Linux Container with given image name, container name and\\n        config.\\n        '''\\n        patternProperties: '(^[a-zA-Z][a-zA-Z0-9\\\\-]{0,61}[a-zA-Z0-9](?!\\\\-)$)|(^[a-zA-Z]$)':\\n          type: 'object'\\n          properties:\\n            'properties':\\n              $ref: 'module://@nikitajs/lxd/src/config/set#/definitions/config/properties/properties'\\n            'disk':\\n              type: 'object'\\n              default: {}\\n              patternProperties: '.*': # Device name of disk\\n                $ref: 'module://@nikitajs/lxd/src/config/device#/definitions/disk/properties/properties'\\n            'image':\\n              $ref: 'module://@nikitajs/lxd/src/init#/definitions/config/properties/image'\\n            'nic':\\n              type: 'object'\\n              default: {}\\n              patternProperties: '.*':\\n                type: 'object'\\n                allOf: [\\n                  properties:\\n                    'ip':\\n                      type: 'string'\\n                      format: 'ipv4'\\n                    'netmask':\\n                      type: 'string'\\n                      default: '255.255.255.0'\\n                      format: 'ipv4'\\n                ,\\n                  $ref: 'module://@nikitajs/lxd/src/config/device#/definitions/nic/properties/properties'\\n                ]\\n            'proxy':\\n              type: 'object'\\n              default: {}\\n              patternProperties: '.*':\\n                $ref: 'module://@nikitajs/lxd/src/config/device#/definitions/proxy/properties/properties'\\n            'user':\\n              type: 'object'\\n              default: {}\\n              patternProperties: '.*':\\n                type: 'object'\\n                properties:\\n                  'sudo':\\n                    type: 'boolean'\\n                    default: false\\n                    description: '''\\n                    Enable sudo access for the user.\\n                    '''\\n                  'authorized_keys':\\n                    type: 'string'\\n                    description: '''\\n                    Path to file with SSH public key to be added to\\n                    authorized_keys file.\\n                    '''\\n            'ssh':\\n              type: 'object'\\n              default: {}\\n              properties:\\n                'enabled':\\n                  type: 'boolean'\\n                  default: false\\n                  description: '''\\n                  Enable SSH connection.\\n                  '''\\n          required: ['image']\\n      'networks':\\n        type: 'object'\\n        default: {}\\n        patternProperties: '.*':\\n          $ref: 'module://@nikitajs/lxd/src/network#/definitions/config/properties/properties'\\n      'prevision':\\n        typeof: 'function'\\n      'provision':\\n        typeof: 'function'\\n      'provision_container':\\n        typeof: 'function'\\n    # required: ['containers']\"))), mdx(\"h2\", {\n    \"id\": \"handler\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#handler\",\n    \"aria-label\": \"handler permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Handler\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"handler = ({config}) ->\\n  # Prevision\\n  if !!config.prevision\\n    await @call config, config.prevision\\n  # Create a network\\n  for networkName, networkProperties of config.networks\\n    await @lxc.network\\n      $header: \\\"Network #{networkName}\\\"\\n      network: networkName\\n      properties: networkProperties\\n  # Init containers\\n  for containerName, containerConfig of config.containers then await @call\\n    $header: \\\"Container #{containerName}\\\"\\n  , ->\\n    # Set configuration\\n    await @lxc.init\\n      $header: 'Init'\\n      container: containerName\\n      image: containerConfig.image\\n    # Set config\\n    if containerConfig?.properties\\n      await @lxc.config.set\\n        $header: 'Properties'\\n        container: containerName\\n        properties: containerConfig.properties\\n    # Create disk device\\n    for deviceName, configDisk of containerConfig.disk\\n      await @lxc.config.device\\n        $header: \\\"Device #{deviceName} disk\\\"\\n        container: containerName\\n        device: deviceName\\n        type: 'disk'\\n        properties: configDisk\\n    # Create nic device\\n    for deviceName, configNic of containerConfig.nic\\n      # note: `confignic.config.parent` is not required for each type\\n      # throw Error \\\"Required Property: nic.#{device}.parent\\\" unless confignic.config.parent\\n      await @lxc.config.device\\n        $header: \\\"Device #{deviceName} nic\\\"\\n        container: containerName\\n        device: deviceName\\n        type: 'nic'\\n        properties: utils.object.filter configNic, ['ip', 'netmask']\\n    # Create proxy device\\n    for deviceName, configProxy of containerConfig.proxy\\n      # todo: add host detection and port forwarding to VirtualBox\\n      # VBoxManage controlvm 'lxd' natpf1 'ipa_ui,tcp,0.0.0.0,2443,,2443'\\n      await @lxc.config.device\\n        $header: \\\"Device #{deviceName} proxy\\\"\\n        container: containerName\\n        device: deviceName\\n        type: 'proxy'\\n        properties: configProxy\\n    # Start container\\n    await @lxc.start\\n      $header: 'Start'\\n      container: containerName\\n    # Wait until container is running\\n    # TODO: use the lxd API with @lxd.query\\n    await @execute.wait\\n      command: \\\"lxc info #{containerName} | grep 'Status: RUNNING'\\\"\\n    await @network.tcp.wait\\n      host: 'linuxfoundation.org'\\n      port: 80\\n      interval: 2000\\n      timeout: 10000\\n    # Openssl is required by the `lxc.file.push` action\\n    await @lxc.exec\\n      $header: 'OpenSSL'\\n      # $retry: 10\\n      # $sleep: 5000\\n      container: containerName\\n      command: \\\"\\\"\\\"\\n      command -v openssl && exit 42\\n      if command -v yum >/dev/null 2>&1; then\\n        yum -y install openssl\\n      elif command -v apt-get >/dev/null 2>&1; then\\n        apt-get -y install openssl\\n      elif command -v apk >/dev/null 2>&1; then\\n        apk add openssl\\n      else\\n        echo \\\"Unsupported Package Manager\\\" >&2 && exit 2\\n      fi\\n      command -v openssl\\n      \\\"\\\"\\\"\\n      trap: true\\n      code_skipped: 42\\n    # Enable SSH\\n    if containerConfig.ssh?.enabled\\n      await @lxc.exec\\n        $header: 'SSH'\\n        container: containerName\\n        command: \\\"\\\"\\\"\\n        if command -v systemctl >/dev/null 2>&1; then\\n          systemctl status sshd && exit 42 || echo '' > /dev/null\\n        elif command -v rc-service >/dev/null 2>&1; then\\n          # Exit code 3 if stopped\\n          rc-service sshd status && exit 42 || echo '' > /dev/null\\n        fi\\n        if command -v yum >/dev/null 2>&1; then\\n          yum -y install openssh-server\\n        elif command -v apt-get >/dev/null 2>&1; then\\n          apt-get -y install openssh-server\\n        elif command -v apk >/dev/null 2>&1; then\\n          apk add openssh-server\\n        else\\n          echo \\\"Unsupported package manager\\\" >&2 && exit 2\\n        fi\\n        if command -v systemctl >/dev/null 2>&1; then\\n          # systemctl status sshd && exit 42\\n          systemctl start sshd\\n          systemctl enable sshd\\n        elif command -v rc-update >/dev/null 2>&1; then\\n          rc-service sshd start\\n          rc-update add sshd\\n        else\\n          echo \\\"Unsupported init system\\\" >&2 && exit 3\\n        fi\\n        \\\"\\\"\\\"\\n        trap: true\\n        code_skipped: 42\\n    # Create users\\n    for userName, configUser of containerConfig.user then await @call\\n      $header: \\\"User #{userName}\\\"\\n    , ->\\n      await @lxc.exec\\n        $header: 'Create'\\n        container: containerName\\n        command: \\\"\\\"\\\"\\n        id #{userName} && exit 42\\n        useradd --create-home --system #{userName}\\n        mkdir -p /home/#{userName}/.ssh\\n        chown #{userName}.#{userName} /home/#{userName}/.ssh\\n        chmod 700 /home/#{userName}/.ssh\\n        \\\"\\\"\\\"\\n        trap: true\\n        code_skipped: 42\\n      # Enable sudo access\\n      await @lxc.exec\\n        $if: configUser.sudo\\n        $header: 'Sudo'\\n        container: containerName\\n        command: \\\"\\\"\\\"\\n        yum install -y sudo\\n        command -v sudo\\n        cat /etc/sudoers | grep \\\"#{userName}\\\" && exit 42\\n        echo \\\"#{userName} ALL=(ALL) NOPASSWD: ALL\\\" >> /etc/sudoers\\n        \\\"\\\"\\\"\\n        trap: true\\n        code_skipped: 42\\n      # Add SSH public key to authorized_keys file\\n      await @lxc.file.push\\n        $if: configUser.authorized_keys\\n        $header: 'Authorize'\\n        container: containerName\\n        gid: \\\"#{userName}\\\"\\n        uid: \\\"#{userName}\\\"\\n        mode: 600\\n        source: \\\"#{configUser.authorized_keys}\\\"\\n        target: \\\"/home/#{userName}/.ssh/authorized_keys\\\"\\n  # Provision\\n  if !!config.provision\\n    await @call config, config.provision\\n  # Provision containers\\n  if !!config.provision_container\\n    for containerName, containerConfig of config.containers\\n      await @call\\n        container: containerName\\n      , containerConfig\\n      , config.provision_container\"))), mdx(\"h2\", {\n    \"id\": \"exports\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#exports\",\n    \"aria-label\": \"exports permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Exports\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"module.exports =\\n  handler: handler\\n  metadata:\\n    definitions: definitions\"))), mdx(\"h2\", {\n    \"id\": \"dependencies\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#dependencies\",\n    \"aria-label\": \"dependencies permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Dependencies\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"utils = require '../utils'\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#nikitalxccluster","title":"nikita.lxc.cluster","items":[{"url":"#example","title":"Example"},{"url":"#schema-definitions","title":"Schema definitions"},{"url":"#handler","title":"Handler"},{"url":"#exports","title":"Exports"},{"url":"#dependencies","title":"Dependencies"}]}]},"excerpt":"nikita.lxc.cluster Create a cluster of LXD instances. Example Schema definitions Handler Exports Dependencies"}}},"pageContext":{}},
    "staticQueryHashes": ["2288906906","393869461"]}