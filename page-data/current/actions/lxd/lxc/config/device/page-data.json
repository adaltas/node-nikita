{
    "componentChunkName": "component---src-templates-action-js",
    "path": "/current/actions/lxd/lxc/config/device/",
    "result": {"data":{"page":{"slug":"/current/actions/lxd/lxc/config/device/","edit_url":"https://github.com/adaltas/node-nikita/edit/master/packages/lxd/src/config/device/index.coffee.md","package":{"id":"b3bda8d7-a98a-5dce-a720-719ab0cb7139","keywords":["nikita","automation","build","deploy","install","ssh","lxd","container"]},"name":"lxc.config.device","version":{"alias":"current"},"parent":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Create a device or update its configuration.\"), mdx(\"h2\", {\n    \"id\": \"output\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#output\",\n    \"aria-label\": \"output permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Output\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"$status\"), \"\\nTrue if the device was created or the configuraion updated.\")), mdx(\"h2\", {\n    \"id\": \"example\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#example\",\n    \"aria-label\": \"example permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Example\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-js\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"$status\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"await\"), \" nikita\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"lxc\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"config\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"device\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"container\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'container1'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"device\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'root'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"type\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'disk'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"properties\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string-property property\"\n  }, \"'pool'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'system'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string-property property\"\n  }, \"'size'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'10GB'\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \"\\nconsole\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"info\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token template-string\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"Disk was created: \"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"${\"), \"$status\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation-punctuation punctuation\"\n  }, \"}\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token template-punctuation string\"\n  }, \"`\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\")))), mdx(\"h2\", {\n    \"id\": \"schema-definitions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#schema-definitions\",\n    \"aria-label\": \"schema definitions permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Schema definitions\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"definitions =\\n  config:\\n    type: 'object'\\n    properties:\\n      'container':\\n        $ref: 'module://@nikitajs/lxd/src/init#/definitions/config/properties/container'\\n      'device':\\n        type: 'string'\\n        description: '''\\n        Name of the device in LXD configuration, for example \\\"eth0\\\".\\n        '''\\n      'properties':\\n        type: 'object'\\n        patternProperties: '': type: ['string', 'boolean', 'number']\\n        description: '''\\n        One or multiple keys to set depending on the type.\\n        '''\\n      'type':\\n        type: 'string'\\n        description: '''\\n        Type of device, see [the list of device\\n        types](https://lxc.readthedocs.io/en/latest/instances/#device-types).\\n        '''\\n    oneOf: [\\n      { $ref: '#/definitions/disk' }\\n      { $ref: '#/definitions/infiniband' }\\n      { $ref: '#/definitions/gpu' }\\n      { $ref: '#/definitions/nic' }\\n      { $ref: '#/definitions/none' }\\n      { $ref: '#/definitions/proxy' }\\n      { $ref: '#/definitions/tpm' }\\n      { $ref: '#/definitions/unix-block' }\\n      { $ref: '#/definitions/unix-char' }\\n      { $ref: '#/definitions/unix-hotplug' }\\n      { $ref: '#/definitions/usb' }\\n    ]\\n    required: ['container', 'device', 'properties', 'type']\\n  'disk':\\n    type: 'object'\\n    properties:\\n      'properties':\\n        type: 'object'\\n        properties:\\n          'path':\\n            type: 'string'\\n            description: '''\\n            Path inside the instance where the disk will be mounted (only\\n            for containers).\\n            '''\\n          'source':\\n            type: 'string'\\n            description: '''\\n            Path on the host, either to a file/directory or to a block\\n            device.\\n            '''\\n        required: ['path', 'source']\\n      'type':\\n        const: 'disk'\\n  'infiniband':\\n    type: 'object'\\n    properties:\\n      'properties':\\n        type: 'object'\\n        properties:\\n          'nictype':\\n            type: 'string'\\n            enum: ['physical', 'sriov']\\n            description: '''\\n            The device type, one of \\\"physical\\\", or \\\"sriov\\\".\\n            '''\\n          'parent':\\n            type: 'string'\\n            description: '''\\n            The name of the host device or bridge.\\n            '''\\n        required: ['nictype', 'parent']\\n      'type':\\n        const: 'infiniband'\\n  'gpu':\\n    type: 'object'\\n    properties:\\n      'type':\\n        const: 'gpu'\\n  'nic':\\n    type: 'object'\\n    properties:\\n      'properties':\\n        type: 'object'\\n        properties:\\n          'nictype':\\n            type: 'string'\\n            enum: ['physical', 'bridged', 'macvlan', 'p2p', 'sriov']\\n            description: '''\\n            LXD supports different kind of [network\\n            devices](https://lxc.readthedocs.io/en/stable-3.0/containers/#type-nic)\\n            and each type of network interface types have different\\n            additional properties.\\n            '''\\n        oneOf: [\\n          { $ref: '#/definitions/nic_physical' }\\n          { $ref: '#/definitions/nic_bridged' }\\n          { $ref: '#/definitions/nic_ipvlan' }\\n          { $ref: '#/definitions/nic_macvlan' }\\n          { $ref: '#/definitions/nic_p2p' }\\n          { $ref: '#/definitions/nic_routed' }\\n          { $ref: '#/definitions/nic_sriov' }\\n        ]\\n      'type':\\n        const: 'nic'\\n  'nic_physical':\\n    type: 'object'\\n    properties:\\n      'nictype':\\n        const: 'physical'\\n  'nic_bridged':\\n    type: 'object'\\n    properties:\\n      'nictype':\\n        const: 'bridged'\\n      'ipv4.address':\\n        type: 'string'\\n        description: '''\\n        An IPv4 address to assign to the instance through DHCP.\\n        '''\\n  'nic_ipvlan':\\n    type: 'object'\\n    properties:\\n      'nictype':\\n        const: 'ipvlan'\\n      'ipv4.address':\\n        type: 'string'\\n        description: '''\\n        Comma delimited list of IPv4 static addresses to add to the\\n        instance. In l2 mode these can be specified as CIDR values or\\n        singular addresses (if singular a subnet of /24 is used).\\n        '''\\n  'nic_macvlan':\\n    type: 'object'\\n    properties:\\n      'nictype':\\n        const: 'macvlan'\\n  'nic_p2p':\\n    type: 'object'\\n    properties:\\n      'nictype':\\n        const: 'p2p'\\n  'nic_routed':\\n    type: 'object'\\n    properties:\\n      'nictype':\\n        const: 'routed'\\n      'ipv4.address':\\n        type: 'string'\\n        description: '''\\n         \\tComma delimited list of IPv4 static addresses to add to the\\n         \\tinstance.\\n        '''\\n  'nic_sriov':\\n    type: 'object'\\n    properties:\\n      'nictype':\\n        const: 'sriov'\\n  'none':\\n    type: 'object'\\n    properties:\\n      'type':\\n        const: 'none'\\n  'proxy':\\n    type: 'object'\\n    properties:\\n      'properties':\\n        type: 'object'\\n        properties:\\n          'connect':\\n            type: 'string'\\n            description: '''\\n            The address and port to bind and listen\\n            (<type>:<addr>:<port>[-<port>][,<port>])\\n            '''\\n          'parent':\\n            type: 'string'\\n            description: '''\\n            The address and port to connect to\\n            (<type>:<addr>:<port>[-<port>][,<port>])\\n            '''\\n        required: ['connect', 'listen']\\n      'type':\\n        const: 'proxy'\\n  'tpm':\\n    type: 'object'\\n    properties:\\n      'type':\\n        const: 'tpm'\\n  'unix-block':\\n    type: 'object'\\n    properties:\\n      'type':\\n        const: 'unix-block'\\n  'unix-char':\\n    type: 'object'\\n    properties:\\n      'type':\\n        const: 'unix-char'\\n  'unix-hotplug':\\n    type: 'object'\\n    properties:\\n      'properties':\\n        type: 'object'\\n        properties:\\n          'path':\\n            type: 'string'\\n            description: '''\\n            Path inside the instance (only for containers).\\n            '''\\n        required: ['path']\\n      'type':\\n        const: 'unix-hotplug'\\n  'usb':\\n    type: 'object'\\n    properties:\\n      'type':\\n        const: 'usb'\"))), mdx(\"h2\", {\n    \"id\": \"handler\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#handler\",\n    \"aria-label\": \"handler permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Handler\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"handler = ({config}) ->\\n  # Normalize config\\n  for k, v of config.properties\\n    continue if typeof v is 'string'\\n    config.properties[k] = v.toString()\\n  {properties} = await @lxc.config.device.show\\n    container: config.container\\n    device: config.device\\n  try\\n    unless properties\\n      # Device not registered, we need to use `add`\\n      {$status} = await @execute\\n        command: [\\n          'lxc', 'config', 'device', 'add',\\n          config.container\\n          config.device\\n          config.type\\n          ...(\\n            \\\"#{key}='#{value.replace '\\\\'', '\\\\\\\\\\\\''}'\\\" for key, value of config.properties\\n          )\\n        ].join ' '\\n    else\\n      # Device not registered, we need to use `set`\\n      changes = diff properties, config.properties\\n      {$status} = await @execute (\\n        command: [\\n          'lxc', 'config', 'device', 'set'\\n          config.container\\n          config.device\\n          key, \\\"'#{value.replace '\\\\'', '\\\\\\\\\\\\''}'\\\"\\n        ].join ' '\\n      ) for key, value of changes\\n    $status: $status\\n  catch err\\n    utils.stderr_to_error_message err, err.stderr\\n    throw err\"))), mdx(\"h2\", {\n    \"id\": \"exports\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#exports\",\n    \"aria-label\": \"exports permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Exports\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"module.exports =\\n  handler: handler\\n  metadata:\\n    definitions: definitions\"))), mdx(\"h2\", {\n    \"id\": \"dependencies\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#dependencies\",\n    \"aria-label\": \"dependencies permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Dependencies\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"diff = require 'object-diff'\\nutils = require '../../utils'\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#nikitalxcconfigdevice","title":"nikita.lxc.config.device","items":[{"url":"#output","title":"Output"},{"url":"#example","title":"Example"},{"url":"#schema-definitions","title":"Schema definitions"},{"url":"#handler","title":"Handler"},{"url":"#exports","title":"Exports"},{"url":"#dependencies","title":"Dependencies"}]}]},"excerpt":"nikita.lxc.config.device Create a device or update its configuration. Output $status \nTrue if the device was created or the configuraion updated. Example Schema definitions Handler Exports Dependenci…"}}},"pageContext":{}},
    "staticQueryHashes": ["2288906906","393869461"]}