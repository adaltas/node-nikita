{
    "componentChunkName": "component---src-templates-package-js",
    "path": "/current/packages/core/",
    "result": {"data":{"page":{"slug":"/current/packages/core/","edit_url":"https://github.com/adaltas/node-nikita/edit/master/packages/core/README.md","description":"Provides the Nikita engine and the core Nikita actions.","keywords":["nikita","build","cli","deploy","fs","install","masson","ssh","system","task"],"version":{"alias":"current"},"parent":{"frontmatter":{"title":"Nikita \"core\" package","titleHtml":"<h1>Nikita \"core\" package</h1>"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \\\"core\\\" package provides the Nikita engine and the core Nikita actions.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"actions":[{"name":"assert","slug":"/current/actions/core/assert/"},{"name":"call","slug":"/current/actions/core/call/"},{"name":"execute.assert","slug":"/current/actions/core/execute/assert/"},{"name":"execute.wait","slug":"/current/actions/core/execute/wait/"},{"name":"fs.base.chmod","slug":"/current/actions/core/fs/base/chmod/"},{"name":"fs.base.chown","slug":"/current/actions/core/fs/base/chown/"},{"name":"fs.base.copy","slug":"/current/actions/core/fs/base/copy/"},{"name":"fs.base.createReadStream","slug":"/current/actions/core/fs/base/createReadStream/"},{"name":"fs.base.createWriteStream","slug":"/current/actions/core/fs/base/createWriteStream/"},{"name":"fs.base.exists","slug":"/current/actions/core/fs/base/exists/"},{"name":"fs.base.lstat","slug":"/current/actions/core/fs/base/lstat/"},{"name":"fs.base.mkdir","slug":"/current/actions/core/fs/base/mkdir/"},{"name":"fs.base.readdir","slug":"/current/actions/core/fs/base/readdir/"},{"name":"fs.base.readFile","slug":"/current/actions/core/fs/base/readFile/"},{"name":"fs.base.readlink","slug":"/current/actions/core/fs/base/readlink/"},{"name":"fs.base.rename","slug":"/current/actions/core/fs/base/rename/"},{"name":"fs.base.rmdir","slug":"/current/actions/core/fs/base/rmdir/"},{"name":"fs.base.stat","slug":"/current/actions/core/fs/base/stat/"},{"name":"fs.base.symlink","slug":"/current/actions/core/fs/base/symlink/"},{"name":"fs.base.unlink","slug":"/current/actions/core/fs/base/unlink/"},{"name":"fs.base.writeFile","slug":"/current/actions/core/fs/base/writeFile/"},{"name":"fs.assert","slug":"/current/actions/core/fs/assert/"},{"name":"fs.chmod","slug":"/current/actions/core/fs/chmod/"},{"name":"fs.chown","slug":"/current/actions/core/fs/chown/"},{"name":"fs.copy","slug":"/current/actions/core/fs/copy/"},{"name":"fs.glob","slug":"/current/actions/core/fs/glob/"},{"name":"fs.hash","slug":"/current/actions/core/fs/hash/"},{"name":"fs.link","slug":"/current/actions/core/fs/link/"},{"name":"fs.mkdir","slug":"/current/actions/core/fs/mkdir/"},{"name":"fs.move","slug":"/current/actions/core/fs/move/"},{"name":"fs.remove","slug":"/current/actions/core/fs/remove/"},{"name":"fs.wait","slug":"/current/actions/core/fs/wait/"},{"name":"ssh.open","slug":"/current/actions/core/ssh/open/"},{"name":"ssh.close","slug":"/current/actions/core/ssh/close/"},{"name":"ssh.root","slug":"/current/actions/core/ssh/root/"},{"name":"wait","slug":"/current/actions/core/wait/"},{"name":"execute","slug":"/current/actions/core/execute/"}]}},"pageContext":{}},
    "staticQueryHashes": ["2288906906","393869461"]}