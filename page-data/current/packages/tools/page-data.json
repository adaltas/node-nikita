{
    "componentChunkName": "component---src-templates-package-js",
    "path": "/current/packages/tools/",
    "result": {"data":{"page":{"slug":"/current/packages/tools/","edit_url":"https://github.com/adaltas/node-nikita/edit/master/packages/tools","description":"Provides Nikita actions for various CLI tools.","keywords":["nikita","build","cli","deploy","fs","install","masson","ssh","system","task"],"version":{"alias":"current"},"parent":{"frontmatter":{"title":"Nikita \"tools\" package","titleHtml":"<h1>Nikita \"tools\" package</h1>"},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \\\"tools\\\" package provides Nikita actions for various CLI tools.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"actions":[{"name":"tools.apm.installed","slug":"/current/actions/tools/apm/installed/"},{"name":"tools.apm.uninstall","slug":"/current/actions/tools/apm/uninstall/"},{"name":"tools.backup","slug":"/current/actions/tools/backup/"},{"name":"tools.compress","slug":"/current/actions/tools/compress/"},{"name":"tools.cron.add","slug":"/current/actions/tools/cron/add/"},{"name":"tools.cron.remove","slug":"/current/actions/tools/cron/remove/"},{"name":"tools.extract","slug":"/current/actions/tools/extract/"},{"name":"tools.dconf","slug":"/current/actions/tools/dconf/"},{"name":"tools.iptables","slug":"/current/actions/tools/iptables/"},{"name":"tools.git","slug":"/current/actions/tools/git/"},{"name":"tools.npm.list","slug":"/current/actions/tools/npm/list/"},{"name":"tools.npm.outdated","slug":"/current/actions/tools/npm/outdated/"},{"name":"tools.npm.uninstall","slug":"/current/actions/tools/npm/uninstall/"},{"name":"tools.npm.upgrade","slug":"/current/actions/tools/npm/upgrade/"},{"name":"tools.repo","slug":"/current/actions/tools/repo/"},{"name":"tools.rubygems.fetch","slug":"/current/actions/tools/rubygems/fetch/"},{"name":"tools.rubygems.install","slug":"/current/actions/tools/rubygems/install/"},{"name":"tools.rubygems.remove","slug":"/current/actions/tools/rubygems/remove/"},{"name":"tools.ssh.keygen","slug":"/current/actions/tools/ssh/keygen/"},{"name":"tools.sysctl","slug":"/current/actions/tools/sysctl/"},{"name":"tools.apm","slug":"/current/actions/tools/apm/"},{"name":"tools.npm","slug":"/current/actions/tools/npm/"}]}},"pageContext":{}},
    "staticQueryHashes": ["2288906906","393869461"]}