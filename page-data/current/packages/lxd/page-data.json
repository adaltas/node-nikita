{
    "componentChunkName": "component---src-templates-package-js",
    "path": "/current/packages/lxd/",
    "result": {"data":{"page":{"slug":"/current/packages/lxd/","edit_url":"https://github.com/adaltas/node-nikita/edit/master/packages/lxd","description":"Provides Nikita actions for various LXD operations.","keywords":["nikita","automation","build","deploy","install","ssh","lxd","container"],"version":{"alias":"current"},"parent":{"frontmatter":{"title":"Nikita \"lxd\" package","titleHtml":"<h1>Nikita \"lxd\" package</h1>"},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \\\"lxd\\\" package provides Nikita actions for various LXD operations.\"), mdx(\"h2\", {\n    \"id\": \"running-the-test\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#running-the-test\",\n    \"aria-label\": \"running the test permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Running the test\"), mdx(\"p\", null, \"The tests require a local LXD client. On a Linux hosts, you can follow the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://linuxcontainers.org/lxd/getting-started-cli/\"\n  }, \"installation instructions\"), \". On non Linux hosts, you can setup the client to communicate with a remote LXD server hosted on a virtual machine. You will however have to mount the project directory into the \\\"/nikita\\\" folder of the virtual machine. The provided Vagrantfile definition inside \\\"@nikitajs/core/env/cluster/assets\\\" will set you up.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-bash\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"# For windows and MacOS users\"), \"\\n./bin/cluster start\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"npm\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token builtin class-name\"\n  }, \"test\")))), mdx(\"h2\", {\n    \"id\": \"notes\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#notes\",\n    \"aria-label\": \"notes permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Notes\"), mdx(\"h3\", {\n    \"id\": \"networks\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#networks\",\n    \"aria-label\": \"networks permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Networks\"), mdx(\"p\", null, \"The LXD tests create two bridge networks:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nikita LXD public: \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"nktlxdpub\"), \", \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"192.0.2.1/30\"), \" (reserved IP subnet ssigned as TEST-NET-1)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nikita LXD private: \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"nktlxdprv\"), \", \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"192.0.2.5/30\"), \" (reserved IP subnet ssigned as TEST-NET-1)\")), mdx(\"p\", null, \"To avoid collision, other tests must create and use their own bridge.\"), mdx(\"h3\", {\n    \"id\": \"windows-and-macos-users\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#windows-and-macos-users\",\n    \"aria-label\": \"windows and macos users permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Windows and MacOS users\"), mdx(\"p\", null, \"LXD is only available on Linux. To work around this limitation, we run LXD in a virtual machine which is managed by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.vagrantup.com/\"\n  }, \"Vagrant\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.virtualbox.org/\"\n  }, \"VirtualBox\"), \".\"), mdx(\"p\", null, \"The Nikita project folder is mounted in \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"/nikita\"), \" inside the VM. The LXD tests don't need to know about it because they only interact with the local \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"lxc\"), \" command. For the tests who need to know this path, the location of the Nikita folder inside the VM can be defined with \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"export NIKITA_HOME=/nikita\"), \". For example, the FreeIPA tests in 'packages/ipa/env/ipa' use it.\"), mdx(\"p\", null, \"The procedure is abstracted inside the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"./bin/cluster start\"), \" command. Below are the manual commands to make it work if you wish to do it yourself.\"), mdx(\"p\", null, \"Install:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-bash\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"# Initialize the VM with multipass\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"# (compatible with macos silicon)\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token builtin class-name\"\n  }, \"cd\"), \" assets \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"&&\"), \" ./multipass.sh \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"&&\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token builtin class-name\"\n  }, \"cd\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"..\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"# Initialize the VM with Vagrant\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"# cd assets && vagrant up && cd ..\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"# Set up LXD client\"), \"\\nlxc remote \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"add\"), \" nikita \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"127.0\"), \".0.1:8443\\nlxc remote switch nikita\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"# Initialize the container\"), \"\\nnpx coffee start.coffee\"))), mdx(\"p\", null, \"Update the VM:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-bash\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"lxc remote switch \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token builtin class-name\"\n  }, \"local\"), \"\\nlxc remote remove nikita\\nlxc remote \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"add\"), \" nikita --accept-certificate \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token parameter variable\"\n  }, \"--password\"), \" secret \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"127.0\"), \".0.1:8443\\nlxc remote switch nikita\"))), mdx(\"p\", null, \"When using a host VM, the test \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"test/goodies/prlimit.coffee\"), \" will fail because\\nit is expected to run on the LXC host machine and the not machine where Nikita\\nis executed. The property \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"tags.lxd_prlimit\"), \" must be \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"false\"), \" in \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"test.coffee\"), \".\"), mdx(\"h3\", {\n    \"id\": \"permission-denied-on-tmp\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#permission-denied-on-tmp\",\n    \"aria-label\": \"permission denied on tmp permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Permission denied on tmp\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://bugzilla.redhat.com/show_bug.cgi?id=1678793\"\n  }, \"FreeIPA install issue\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"[1/29]: configuring certificate server instance\\n[error] IOError: [Errno 13] Permission denied: '/tmp/tmp_Tm1l_'\"))), mdx(\"p\", null, \"Host must have \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"fs.protected_regular\"), \" set to \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"0\"), \", eg \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"echo '0' > /proc/sys/fs/protected_regular && sysctl -p && sysctl -a\"), \". In our Physical -> VM -> LXD setup, the parameters shall be set in the VM, no restart is required to install the FreeIPA server, just uninstall it first with \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"ipa-server-install --uninstall\"), \" before re-executing the install command.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"actions":[{"name":"lxc.cluster.stop","slug":"/current/actions/lxd/lxc/cluster/stop/"},{"name":"lxc.cluster.delete","slug":"/current/actions/lxd/lxc/cluster/delete/"},{"name":"lxc.config.device.delete","slug":"/current/actions/lxd/lxc/config/device/delete/"},{"name":"lxc.config.device.exists","slug":"/current/actions/lxd/lxc/config/device/exists/"},{"name":"lxc.config.device.show","slug":"/current/actions/lxd/lxc/config/device/show/"},{"name":"lxc.config.set","slug":"/current/actions/lxd/lxc/config/set/"},{"name":"lxc.init","slug":"/current/actions/lxd/lxc/init/"},{"name":"lxc.delete","slug":"/current/actions/lxd/lxc/delete/"},{"name":"lxc.start","slug":"/current/actions/lxd/lxc/start/"},{"name":"lxc.state","slug":"/current/actions/lxd/lxc/state/"},{"name":"lxc.stop","slug":"/current/actions/lxd/lxc/stop/"},{"name":"lxc.exec","slug":"/current/actions/lxd/lxc/exec/"},{"name":"lxc.file.exists","slug":"/current/actions/lxd/lxc/file/exists/"},{"name":"lxc.file.pull","slug":"/current/actions/lxd/lxc/file/pull/"},{"name":"lxc.file.push","slug":"/current/actions/lxd/lxc/file/push/"},{"name":"lxc.goodies.prlimit","slug":"/current/actions/lxd/lxc/goodies/prlimit/"},{"name":"lxc.network.attach","slug":"/current/actions/lxd/lxc/network/attach/"},{"name":"lxc.network.detach","slug":"/current/actions/lxd/lxc/network/detach/"},{"name":"lxc.network.delete","slug":"/current/actions/lxd/lxc/network/delete/"},{"name":"lxc.network.list","slug":"/current/actions/lxd/lxc/network/list/"},{"name":"lxc.query","slug":"/current/actions/lxd/lxc/query/"},{"name":"lxc.list","slug":"/current/actions/lxd/lxc/list/"},{"name":"lxc.running","slug":"/current/actions/lxd/lxc/running/"},{"name":"lxc.storage.delete","slug":"/current/actions/lxd/lxc/storage/delete/"},{"name":"lxc.storage.volume.delete","slug":"/current/actions/lxd/lxc/storage/volume/delete/"},{"name":"lxc.storage.volume.list","slug":"/current/actions/lxd/lxc/storage/volume/list/"},{"name":"lxc.storage.volume.get","slug":"/current/actions/lxd/lxc/storage/volume/get/"},{"name":"lxc.storage.volume.attach","slug":"/current/actions/lxd/lxc/storage/volume/attach/"},{"name":"lxc.wait.ready","slug":"/current/actions/lxd/lxc/wait/ready/"},{"name":"lxc.resources","slug":"/current/actions/lxd/lxc/resources/"},{"name":"lxc.cluster","slug":"/current/actions/lxd/lxc/cluster/"},{"name":"lxc.config.device","slug":"/current/actions/lxd/lxc/config/device/"},{"name":"lxc.network","slug":"/current/actions/lxd/lxc/network/"},{"name":"lxc.network.create","slug":"/current/actions/lxd/lxc/network/create/"},{"name":"lxc.storage","slug":"/current/actions/lxd/lxc/storage/"},{"name":"lxc.storage.volume","slug":"/current/actions/lxd/lxc/storage/volume/"}]}},"pageContext":{}},
    "staticQueryHashes": ["2288906906","393869461"]}