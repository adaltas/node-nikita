# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Nikita CI
on:
  push:
    branches: [ fix/ci-test-job ]
  pull_request:
    branches: [ master ]
jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: sudo apt install -y openssh-server openssl && sudo systemctl start sshd
    - run: sudo apt install -y openjdk-8-jre-headless
    - run: ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519 -N ''
    - run: cat ~/.ssh/id_ed25519.pub > ~/.ssh/authorized_keys
    - run: yarn --frozen-lockfile
    - run: npx lerna run test:local --ignore=@nikitajs/lxd
    
  test_lxd:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install LXD
      if: "${{ github.event.inputs.channel == '' }}"
      shell: bash
      run: |
        if ! snap info lxd | grep "installed"; then
          sudo snap install lxd --channel=5.0/stable
        fi
    - name: Initialise LXD
      shell: bash
      run: |
        sudo lxd waitready
        sudo lxd init --auto
    - name: Set up permissions for socket
      shell: bash
      run: |
        sudo snap set lxd daemon.group=adm
        sudo snap restart lxd
    - name: Configure firewall
      shell: bash
      run: |
        set -x
        sudo iptables -I DOCKER-USER -j ACCEPT
    - run: ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519 -N ''
    - run: cat ~/.ssh/id_ed25519.pub > ~/.ssh/authorized_keys
    - run: yarn --frozen-lockfile
    - run: npx lerna run test:local --scope=@nikitajs/lxd
    
  # deploy:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [14.x]
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: actions/setup-node@v1
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       registry-url: 'https://registry.npmjs.org'
  #   - run: yarn --frozen-lockfile
  #   - run: yarn run publish
  #     env:
  #       NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  
  # www:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v1
  #     with:
  #       node-version: 14.x
  #   - run: yarn --frozen-lockfile
  #   - run: cd docs/website && yarn install && yarn build
  #   - run: echo 'nikita.js.org' > docs/website/public/CNAME
  #   - name: Deploy
  #     uses: JamesIves/github-pages-deploy-action@4.0.0-beta-01
  #     with:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\
  #       # REPOSITORY_NAME: adaltas/node-nikita-docs
  #       BRANCH: gh-pages # The branch the action should deploy to.
  #       FOLDER: docs/website/public # The folder the action should deploy.
  #       CLEAN: true # Automatically remove deleted files from the deploy branch
